//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleMathClientProject.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/SimpleMathService")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonName {
            get {
                return this.PersonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonNameField, value) != true)) {
                    this.PersonNameField = value;
                    this.RaisePropertyChanged("PersonName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISimpleMath")]
    public interface ISimpleMath {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMath/Square", ReplyAction="http://tempuri.org/ISimpleMath/SquareResponse")]
        int Square(int x);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMath/Square", ReplyAction="http://tempuri.org/ISimpleMath/SquareResponse")]
        System.Threading.Tasks.Task<int> SquareAsync(int x);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMath/Cube", ReplyAction="http://tempuri.org/ISimpleMath/CubeResponse")]
        int Cube(int x);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMath/Cube", ReplyAction="http://tempuri.org/ISimpleMath/CubeResponse")]
        System.Threading.Tasks.Task<int> CubeAsync(int x);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMath/Add", ReplyAction="http://tempuri.org/ISimpleMath/AddResponse")]
        int Add(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMath/Add", ReplyAction="http://tempuri.org/ISimpleMath/AddResponse")]
        System.Threading.Tasks.Task<int> AddAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMath/GetPerson", ReplyAction="http://tempuri.org/ISimpleMath/GetPersonResponse")]
        SimpleMathClientProject.ServiceReference1.Person[] GetPerson(char x);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleMath/GetPerson", ReplyAction="http://tempuri.org/ISimpleMath/GetPersonResponse")]
        System.Threading.Tasks.Task<SimpleMathClientProject.ServiceReference1.Person[]> GetPersonAsync(char x);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimpleMathChannel : SimpleMathClientProject.ServiceReference1.ISimpleMath, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleMathClient : System.ServiceModel.ClientBase<SimpleMathClientProject.ServiceReference1.ISimpleMath>, SimpleMathClientProject.ServiceReference1.ISimpleMath {
        
        public SimpleMathClient() {
        }
        
        public SimpleMathClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimpleMathClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleMathClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleMathClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Square(int x) {
            return base.Channel.Square(x);
        }
        
        public System.Threading.Tasks.Task<int> SquareAsync(int x) {
            return base.Channel.SquareAsync(x);
        }
        
        public int Cube(int x) {
            return base.Channel.Cube(x);
        }
        
        public System.Threading.Tasks.Task<int> CubeAsync(int x) {
            return base.Channel.CubeAsync(x);
        }
        
        public int Add(int x, int y) {
            return base.Channel.Add(x, y);
        }
        
        public System.Threading.Tasks.Task<int> AddAsync(int x, int y) {
            return base.Channel.AddAsync(x, y);
        }
        
        public SimpleMathClientProject.ServiceReference1.Person[] GetPerson(char x) {
            return base.Channel.GetPerson(x);
        }
        
        public System.Threading.Tasks.Task<SimpleMathClientProject.ServiceReference1.Person[]> GetPersonAsync(char x) {
            return base.Channel.GetPersonAsync(x);
        }
    }
}
